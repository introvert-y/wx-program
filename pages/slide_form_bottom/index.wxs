var newmark = startmark = 0
var lastX = 0
var clock = false
function touchstart(e, ins) {
  var instance = e.instance;
  var info = instance.getDataset();
  var state = ins.getState();

  var pageY = (e.touches[0] || e.changedTouches[0]).pageY;
  startmark = newmark = pageY;

  if (!lastX && !state.height) {
    console.log('start 赋值')
    lastX = info.min;
    state.height = info.height;
    state.initHeight = info.init;
    state.minHeight = info.min;
  }

  console.log('start', pageY);
}
function touchmove(e, ins) {
  var state = ins.getState();
  var pageY = (e.touches[0] || e.changedTouches[0]).pageY;
  var newmark = pageY;
  var condition = (state.minHeight <= ( -5 + state.height - (lastX + Math.abs(newmark - startmark))));

  console.log('move condition', condition, state.height - (lastX + Math.abs(newmark - startmark)))
  if (startmark < pageY && condition) {
    if ((state.height > Math.abs(newmark - startmark))) {
      console.log('transform', (lastX + newmark - startmark));
      ins.selectComponent('.slider_box').setStyle({
        transform: 'translate3d(0, ' + Math.min(state.height, (lastX + Math.abs(newmark - startmark))) + 'px, 0)'
      })
    }
  }
  if (startmark > pageY) {
    ins.selectComponent('.slider_box').setStyle({
      transform: 'translate3d(0, ' + Math.max(0, (lastX - Math.abs(newmark - startmark))) + 'px, 0)'
    })
  }
}
function touchend(e, ins) {
  var pageY = (e.touches[0] || e.changedTouches[0]).pageY
  newmark = pageY
  var state = ins.getState();
  var condition = (state.minHeight <= (state.height - (lastX + newmark - startmark)));

  console.log('touchend', Math.abs(newmark - startmark));


  if (startmark < pageY) {
    ins.selectComponent('.slider_box').setStyle({
      transform: 'translate3d(0, ' + (condition ? (lastX + newmark - startmark) : state.initHeight)  + 'px, 0)'
    })
    lastX += Math.abs(newmark - startmark)
    if(lastX >= state.initHeight) {
      lastX = state.initHeight
    }
    console.log('下滑1111', lastX)
  }
  if (startmark > newmark) {
    ins.selectComponent('.slider_box').setStyle({
      transform: 'translate3d(0, ' +  Math.max(0, Math.floor((lastX - Math.abs(newmark - startmark)))) + 'px, 0)'
    })
    lastX -= Math.abs(newmark - startmark);
    if (lastX <= 0) {
      lastX = 0;
      // return;
    }
    console.log('上滑', lastX)

  }
  // console.log('last', lastX);
}
module.exports = {
  touchstart: touchstart,
  touchmove: touchmove,
  touchend: touchend
}
